import matplotlib.pyplot as plt
import numpy as np
#Short script for plotting points that represent the Y axis of the stage at different angles

# ellipse points
    #points = [[3.669, 11.0, 2.485, 0.0], [3.56175, 11.0, 2.415, 20.0], [3.3563500000000004, 11.0, 2.3150000000000004, 40.0], [3.45255, 11.0, 2.3150000000000004, 60.0], [3.23285, 11.0, 2.215, 80.0], [3.06515, 11.0, 2.3150000000000004, 100.0], [2.89875, 11.0, 2.415, 120.0], [2.8162000000000003, 11.0, 2.615, 140.0], [2.7746, 11.0, 2.8150000000000004, 160.0], [3.18995, 11.0, 2.915, 180.0], [2.77785, 11.0, 3.0150000000000006, 200.0], [3.0534499999999998, 11.0, 3.0150000000000006, 220.0], [3.38755, 11.0, 3.0150000000000006, 240.0], [3.8107, 11.0, 3.0150000000000006, 260.0], [3.70605, 11.0, 3.0150000000000006, 280.0], [3.16135, 11.0, 3.0150000000000006, 300.0], [3.2666500000000003, 11.0, 2.8150000000000004, 320.0]]
def plot_points(points, theoretical_points):
    # Extract X, Z, and angular coordinates for the given points
    x_coords = [point[0] for point in points]
    z_coords = [point[2] for point in points]
    r_coords = [point[3] for point in points]

    # Extract X, Z coordinates for the theoretical points
    x_coords_theoretical = [point[0] for point in theoretical_points]
    z_coords_theoretical = [point[2] for point in theoretical_points]

    # Create scatter plot with color coding for the given points
    plt.scatter(x_coords, z_coords, c=r_coords, cmap="hsv")
    # Create colorbar
    cbar = plt.colorbar()
    cbar.set_label('Angle (degrees)')
    # Plot the theoretical points as black stars
    plt.scatter(x_coords_theoretical, z_coords_theoretical, color="black", marker="*")


    plt.xlabel('X')
    plt.ylabel('Z')
    plt.title('XZ coordinates of ellipse points')
    plt.grid(True)
    plt.show()
if __name__ == "__main__":
    points = [[3.669, 11.0, 2.485, 0.0], [3.08985, 11.0, 1.7650000000000003, 20.0], [3.40705, 11.0, 2.2650000000000006, 40.0], [3.3537500000000002, 11.0, 2.2650000000000006, 60.0], [3.1607000000000003, 11.0, 2.2650000000000006, 80.0], [3.01315, 11.0, 2.2650000000000006, 100.0], [2.9475, 11.0, 2.365, 120.0], [2.85715, 11.0, 2.665, 140.0], [2.8123000000000005, 11.0, 2.7650000000000006, 160.0], [3.05735, 11.0, 1.9650000000000003, 180.0], [2.8577999999999997, 11.0, 2.365, 200.0], [2.9676500000000003, 11.0, 3.0650000000000004, 220.0], [3.40965, 11.0, 3.0650000000000004, 240.0], [3.24325, 11.0, 3.165, 260.0], [3.48505, 11.0, 3.0650000000000004, 280.0], [3.6273999999999997, 11.0, 2.9650000000000003, 300.0], [3.6599000000000004, 11.0, 2.865, 320.0]]
    theoretical_points = [[3.7100623869631812, 3, 2.6761920218449546, 0.0], [3.6829342209541376, 3, 2.8363336318650383, 20.0], [3.604821780116787, 3, 2.977159800278249, 40.0], [3.485146577632962, 3, 3.0816848128010608, 60.0], [3.3383432091400933, 3, 3.1373014102983325, 80.0], [3.182118327465392, 3, 3.1373014102983325, 100.0], [3.0353149589725237, 3, 3.081684812801061, 120.0], [2.9156397564886984, 3, 2.977159800278249, 140.0], [2.837527315651348, 3, 2.8363336318650383, 160.0], [2.810399149642304, 3, 2.6761920218449546, 180.0], [2.837527315651348, 3, 2.516050411824871, 200.0], [2.9156397564886984, 3, 2.3752242434116604, 220.0], [3.0353149589725232, 3, 2.2706992308888485, 240.0], [3.182118327465392, 3, 2.2150826333915767, 260.0], [3.3383432091400933, 3, 2.2150826333915767, 280.0], [3.485146577632962, 3, 2.2706992308888485, 300.0], [3.604821780116787, 3, 2.3752242434116604, 320.0]] 
    
    plot_points(points, theoretical_points)